buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'maven-publish'

ext {
    MC_VERSION = '1.16.1'
    FORGE_VERSION = '32.0.63'
    MY_VERSION = '1.3.0'
    MODID = 'sockets'
    JEI_VERSION = '6.0.0.3'
}

version = "${MC_VERSION}-${MY_VERSION}"
group = 'nukeologist.sockets' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Sockets'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20200707-1.16.1'

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                sockets {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                sockets {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', MODID, '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                sockets {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://tehnut.info/maven"
    }
    mavenLocal()
}


dependencies {
    minecraft "net.minecraftforge:forge:${MC_VERSION}-${FORGE_VERSION}"

    // compile against the JEI API but do not include it at runtime
    //compileOnly fg.deobf("mezz.jei:jei-${MC_VERSION}:${JEI_VERSION}:api")
    // at runtime, use the full JEI jar
    //runtimeOnly fg.deobf("mezz.jei:jei-${MC_VERSION}:${JEI_VERSION}")

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "Sockets",
            "Specification-Vendor": "Nukeologist",
            "Specification-Version": MY_VERSION,
            "Implementation-Title": project.name,
            "Implementation-Version": version,
            "Implementation-Vendor" :"Nukeologist",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from(jar.manifest)
}
// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
//jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}